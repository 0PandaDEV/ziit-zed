name: Build

permissions:
  contents: read

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup cargo-dist
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-dist@0.28.0

      - name: Run cargo-dist
        run: |
          dist build --output-format=json --allow-dirty > dist-manifest.json
        env:
          CARGO_DIST_MANIFEST_PATH: ./dist-workspace.toml

      - name: Collect artifacts
        id: collect-artifacts
        run: |
          mkdir -p artifacts
          cp -r target/dist/* artifacts/ || true

      - name: Upload combined artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all-artifacts
          path: artifacts
          retention-days: 5

      - name: Find individual binaries
        run: |
          for dir in artifacts/*; do
            if [ -d "$dir" ]; then
              target_name=$(basename "$dir")
              echo "Processing $target_name"
              mkdir -p "single-artifacts/$target_name"
              
              # Find the binary files and copy them
              find "$dir" -type f -executable -o -name "*.exe" | while read binary; do
                if [ -f "$binary" ]; then
                  cp "$binary" "single-artifacts/$target_name/"
                fi
              done
            fi
          done

      - name: Upload individual artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-only
          path: single-artifacts
          retention-days: 5 