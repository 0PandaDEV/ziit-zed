name: Build

permissions:
  contents: write

on:
  pull_request:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Version tag (e.g. v1.0.0)"
        required: true
        default: "v1.0.0"
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu,aarch64-apple-darwin,x86_64-apple-darwin,x86_64-unknown-linux-gnu,x86_64-pc-windows-msvc

      - name: Install required dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          sudo apt-get install -y mingw-w64

      - name: Install cargo-dist
        run: cargo install cargo-dist --version 0.27.1

      - name: Get version
        id: get_version
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION=${{ github.event.inputs.version_tag }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Copy dist-workspace.toml
        run: cp ziit-zed/dist-workspace.toml .

      - name: Build all targets
        run: |
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          cargo dist build --workspace-toml dist-workspace.toml --tag ${{ steps.get_version.outputs.version }}

      - name: Package binaries
        run: |
          mkdir -p artifacts
          VERSION=${{ steps.get_version.outputs.version }}
          
          # Linux x86_64
          mkdir -p "ziit-ls-$VERSION-x86_64-unknown-linux-gnu"
          cp target/x86_64-unknown-linux-gnu/release/ziit-ls "ziit-ls-$VERSION-x86_64-unknown-linux-gnu/"
          zip -r "artifacts/x86_64-unknown-linux-gnu.zip" "ziit-ls-$VERSION-x86_64-unknown-linux-gnu"
          
          # Linux ARM64
          mkdir -p "ziit-ls-$VERSION-aarch64-unknown-linux-gnu"
          cp target/aarch64-unknown-linux-gnu/release/ziit-ls "ziit-ls-$VERSION-aarch64-unknown-linux-gnu/"
          zip -r "artifacts/aarch64-unknown-linux-gnu.zip" "ziit-ls-$VERSION-aarch64-unknown-linux-gnu"
          
          # macOS x86_64
          mkdir -p "ziit-ls-$VERSION-x86_64-apple-darwin"
          cp target/x86_64-apple-darwin/release/ziit-ls "ziit-ls-$VERSION-x86_64-apple-darwin/"
          zip -r "artifacts/x86_64-apple-darwin.zip" "ziit-ls-$VERSION-x86_64-apple-darwin"
          
          # macOS ARM64
          mkdir -p "ziit-ls-$VERSION-aarch64-apple-darwin"
          cp target/aarch64-apple-darwin/release/ziit-ls "ziit-ls-$VERSION-aarch64-apple-darwin/"
          zip -r "artifacts/aarch64-apple-darwin.zip" "ziit-ls-$VERSION-aarch64-apple-darwin"
          
          # Windows x86_64
          mkdir -p "ziit-ls-$VERSION-x86_64-pc-windows-msvc"
          cp target/x86_64-pc-windows-msvc/release/ziit-ls.exe "ziit-ls-$VERSION-x86_64-pc-windows-msvc/"
          zip -r "artifacts/x86_64-pc-windows-msvc.zip" "ziit-ls-$VERSION-x86_64-pc-windows-msvc"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all-artifacts
          path: artifacts/*.zip
          retention-days: 5

  release:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Get version
        id: get_version
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION=${{ github.event.inputs.version_tag }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: all-artifacts
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          files: |
            artifacts/x86_64-unknown-linux-gnu.zip
            artifacts/aarch64-unknown-linux-gnu.zip
            artifacts/x86_64-apple-darwin.zip
            artifacts/aarch64-apple-darwin.zip
            artifacts/x86_64-pc-windows-msvc.zip
          generate_release_notes: true
