name: Release

permissions:
  contents: write

on:
  pull_request:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: "main"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Cargo Dist
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-dist@0.28.0

      - name: Configure build
        run: |
          dist host --steps=create --tag=main --output-format=json > dist-manifest.json
          echo "manifest=$(jq -c "." dist-manifest.json)" >> $GITHUB_OUTPUT
        id: config

      - name: Build artifacts
        run: |
          dist build --tag=main --print=linkage --output-format=json > build-manifest.json

      - name: Upload manifests
        uses: actions/upload-artifact@v4
        with:
          name: dist-manifests
          path: |
            dist-manifest.json
            build-manifest.json

      - name: Prepare release files
        id: prepare-release
        run: |
          mkdir -p release-files
          cp -r target/release/* release-files/ || true
          echo "files_path=release-files" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ${{ steps.prepare-release.outputs.files_path }}
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Main Build"
          tag_name: "main"
          files: artifacts/build-artifacts/**/*
          generate_release_notes: true
          draft: false
          prerelease: false
